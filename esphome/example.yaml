substitutions:
  # Unique device ID in HA
  deviceid: "ac_example"
  # Unique device name in HA (sensor names will be prefixed by this name)
  devicename: "AC Example"

esphome:
  name: ac-example
  platformio_options:
    board_build.flash_mode: dio
  includes:
    - mhi_ac_ctrl.h
    - MHI-AC-Ctrl-core.h
    - MHI-AC-Ctrl-core.cpp

esp32:
  board: esp32-c3-devkitm-1
  framework: 
    type: esp-idf

# Enable logging
logger:
  level: DEBUG

climate:
  - platform: custom
    lambda: |-
      auto mhi_ac_ctrl = new MhiAcCtrl();
      App.register_component(mhi_ac_ctrl);
      return {mhi_ac_ctrl};
    climates:
      - name: "${devicename}"
        id: ${deviceid}

# awaiting https://github.com/esphome/feature-requests/issues/2066
#select:
  #- platform: custom
    #lambda: |-
      #return ((MhiAcCtrl*)id(${deviceid}))->get_selects();
    #selects:
      #- name: ${devicename} Vanes

sensor:
  - platform: homeassistant
    name: "Voltage"
    entity_id: sensor.voltage_l3
    on_value:
      then:
        - lambda: 'mhi_energy.set_voltage(x);'

  - platform: custom
    lambda: |-
      return ((MhiAcCtrl*)id(${deviceid}))->get_sensors();
    # Sensor names in HA, you can change these if you want
    # Don't delete them or change their position in the list
    sensors:
      - name: ${devicename} fan raw
      - name: ${devicename} fan old
      - name: ${devicename} Energy
      - name: ${devicename} Power
      - name: ${devicename} Frame errors
      #- name: ${devicename} error code
      #- name: ${devicename} outdoor temperature
      #- name: ${devicename} return air temperature
      #- name: ${devicename} outdoor unit fan speed
      #- name: ${devicename} indoor unit fan speed
      #- name: ${devicename} current power
      #- name: ${devicename} compressor frequency
      #- name: ${devicename} indoor unit total run time
      #- name: ${devicename} compressor total run time
      #- name: ${devicename} vanes

switch:
  - platform: custom
    lambda: |-
      return ((MhiAcCtrl*)id(${deviceid}))->get_switches();
    # Switch names in HA, you can change these if you want
    # Don't delete them or change their position in the list
    switches:
      - name: ${devicename} Active mode
        id: ${deviceid}_active_mode
        # TODO: this does not work!?
        restore_mode: ALWAYS_ON


# Stop communications to AC when we're offline
# Stuff like on timer on the IR remote will work when we are in passive mode
# #TODO: test / increase interval
#interval:
  #- interval: 1s
    #then:
      #if:
        #condition:
          #api.connected:
        #then:
          #- switch.turn_on: ${deviceid}_active_mode
        #else:
          #- switch.turn_off: ${deviceid}_active_mode


status_led:
  pin: 
    #white led, off when all good
    number: 19

