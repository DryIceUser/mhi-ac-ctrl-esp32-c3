substitutions:
  mhi_device_id: "mhi_ac_example"
  # Unique device ID in HA
  device_id: "ac_example"
  # Unique device name in HA (sensor names will be prefixed by this name)
  device_name: "AC Example"

esphome:
  name: ac-example
  platformio_options:
    board_build.flash_mode: dio

external_components:
  - source: components

esp32:
  board: esp32-c3-devkitm-1
  framework:
    type: esp-idf

# Optionally enable logging
logger:
  level: INFO

MhiAcCtrl:
  id: ${mhi_device_id}
  # Optional config
  # The default values are:
  use_long_frame: true
  mosi_pin: GPIO7
  miso_pin: GPIO2
  sclk_pin: GPIO6
  cs_in_pin: GPIO10
  cs_out_pin: GPIO9

climate:
  - platform: MhiAcCtrl
    mhi_ac_ctrl_id: ${mhi_device_id}
    id: ${device_id}
    name: "${device_name}"

select:
  - platform: MhiAcCtrl
    mhi_ac_ctrl_id: ${mhi_device_id}
    vanes_ud:
      name: ${device_name} Vanes Up Down
      id: ${device_id}_vanes_ud
    # The 3D auto setting and vanes_lr only work when use_long_frame is set to true
    vanes_lr:
      name: ${device_name} Vanes Left Right
      id: ${device_id}_vanes_lr

sensor:
  - platform: MhiAcCtrl
    mhi_ac_ctrl_id: ${mhi_device_id}
    total_energy:
      name: ${device_name} Energy
      filters:
        - throttle: 60s
    power:
      name: ${device_name} Power
    frame_errors:
      name: ${device_name} Frame errors
    # Special sensor to filter out bursts of (small) temperature changes. When
    # this sensor is present, the current temperature in the climate component
    # will use the filtered value from this sensor..
    #
    # Use case: filtering out temperature jitter. See
    # https://github.com/hberntsen/mhi-ac-ctrl-esp32-c3/issues/5
    climate_current_temperature:
      # Only id, no name so it won't be sent to home assistant as separate sensor
      id: climate_current_temperature
      filters:
        # Check for new temperatures every 10 seconds
        - heartbeat: 10s
        # Home assistant does not show decimals
        - round: 0
        # The climate component will only send updates if the value is different

#  - platform: homeassistant
#    name: "Voltage"
#    entity_id: sensor.voltage_l3
#    filters:
#      - filter_out: nan
#    on_value:
#      then:
#        - lambda: 'mhi_ac::energy.set_voltage(x);'

switch:
  - platform: MhiAcCtrl
    mhi_ac_ctrl_id: ${mhi_device_id}
    active_mode:
      name: ${device_name} Active mode
      id: ${device_id}_active_mode

status_led:
  pin:
    #white led, off when all good
    number: 19

